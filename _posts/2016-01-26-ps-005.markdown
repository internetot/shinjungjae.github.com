---
layout: post
title:  "[LeetCode] Remove Duplicates from Sorted List (1)"
date:   2016-01-26 00:17:00
categories: algorithm
author: Rachel Park
comments: true
tags: [ps]
permalink: ps/005
---


<a href='https://leetcode.com/problems/remove-duplicates-from-sorted-list/'>Remove Duplicates from Sorted List</a>
<br/><br/>

Given a sorted linked list, delete all duplicates such that each element appear only once.

For example,
<br/><br/>
Given 1->1->2, return 1->2.
<br/><br/>
Given 1->1->2->3->3, return 1->2->3.
<br/><br/>

<a href='https://github.com/mjpark03/leetcode/blob/master/remove-duplicates-from-sorted-list.java'>My Solution (Github)</a>
{% highlight text %}
/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) { val = x; }
 * }
 */
public class Solution {
    public ListNode deleteDuplicates(ListNode head) {
        
        ListNode resultHead;
        ListNode resultTrack;
        ListNode track = head;
        
        if (head==null || track.next==null) {
            return head;
        }
        
        int lastVal = track.val;
        int currentVal = track.val;
        resultHead = new ListNode(currentVal);
        track = track.next;
        resultTrack = resultHead;
        
        while(track!=null) {
            currentVal = track.val;
            
            if (lastVal!=currentVal) {
                resultTrack.next = new ListNode(currentVal);
                resultTrack = resultTrack.next;
                lastVal = currentVal;
            } 
            
            track = track.next;
        }
        
        return resultHead;
    }
}
{% endhighlight %}

<!-- more -->

<br/><br/>
* Time Complexity: O(n)



